<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlantUMLEditor"
    xmlns:models="clr-namespace:PlantUMLEditor.Models"
    xmlns:localControls="clr-namespace:PlantUMLEditor.Controls"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="PlantUMLEditor.MainWindow"

        mc:Ignorable="d"
        Title="Aaron's Plant UML Editor" Height="850" Width="1000"

    xmlns:System="clr-namespace:System;assembly=System.Runtime" Icon="/Images/uml.png">
    <Window.Resources>
        <ContextMenu x:Key="FolderMenu">
            <MenuItem Header="New Class Diagram" Command="{Binding DataContext.CreateNewClassDiagram , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" ></MenuItem>
            <MenuItem Header="New Sequence Diagram" Command="{Binding DataContext.CreateNewSequenceDiagram , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" ></MenuItem>
            <Separator></Separator>

            <MenuItem Header="New Folder" Command="{Binding NewFolderCommand}"></MenuItem>
            <MenuItem Header="Rename" Command="{Binding StartRenameCommand}"></MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="FileMenu">
            <MenuItem Header="Rename" Command="{Binding StartRenameCommand}"></MenuItem>
        </ContextMenu>
        <System:Double x:Key="AutoCompleteOpacity">0.8</System:Double>
        <DataTemplate x:Key="TabControlItemTemplate2">

            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <Grid   Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"
                               Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Image Source="{Binding Children[1].LineNumbers, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" ></Image>
                    <localControls:MyTextBox Grid.Column="1" IsInactiveSelectionHighlightEnabled="True"
                                              UndoLimit="100"
                                             BindedDocument="{Binding}"  DataContext="{Binding}"   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
 Style="{DynamicResource TextBoxStyle1}"
                            AcceptsReturn="True"  AcceptsTab="True"
                               FontFamily="Calibri" FontSize="14">
                    </localControls:MyTextBox>
                    <Button Command="{Binding RegenDocument}" Content="Regen" Grid.Row="1"></Button>
                </Grid>
                <Grid x:Name="AutoCompleteGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ListBox x:Name="AutoCompleteBox" Grid.Row="2" Grid.ColumnSpan="2"
                             MaxHeight="100"
                           ItemsSource="{Binding SortedMatchingAutoCompletes}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"></TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Canvas>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="NameTemplate" ItemsSource="{Binding Children}">

            <Grid   HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto">
                    </ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:CallMethodAction MethodName="TreeItemClicked" TargetObject="{Binding Path=DataContext,  RelativeSource={RelativeSource FindAncestor,
AncestorType={x:Type TreeView}}}"></b:CallMethodAction>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Image Source="{Binding Icon}" Width="20">
                </Image>
                <TextBox x:Name="rename" Text="{Binding Rename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <b:Interaction.Triggers>
                        <b:KeyTrigger Key="Return" ActiveOnFocus="True">

                            <b:InvokeCommandAction  Command="{Binding  DoRenameCommand}"></b:InvokeCommandAction>
                        </b:KeyTrigger>
                    </b:Interaction.Triggers>
                </TextBox>
                <TextBlock x:Name="txt" Grid.Column="1" Text="{Binding Name}" FontWeight="Bold">
                </TextBlock>
            </Grid>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Value="true">
                    <DataTrigger.Binding>
                        <Binding  Path="IsRenaming"></Binding>
                    </DataTrigger.Binding>
                    <DataTrigger.Setters>
                        <Setter Property="Visibility"  TargetName="rename" Value="Visible">
                        </Setter>
                        <Setter Property="Visibility"  TargetName="txt" Value="Collapsed">
                        </Setter>
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Value="false">
                    <DataTrigger.Binding>
                        <Binding  Path="IsRenaming"></Binding>
                    </DataTrigger.Binding>
                    <DataTrigger.Setters>
                        <Setter Property="Visibility"  TargetName="rename" Value="Collapsed">
                        </Setter>
                        <Setter Property="Visibility"  TargetName="txt" Value="Visible">
                        </Setter>
                    </DataTrigger.Setters>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <Thickness x:Key="TabHeaderMargin">5,2,10,2</Thickness>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type localControls:MyTextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type localControls:MyTextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Ribbon Grid.ColumnSpan="3">
            <RibbonTab Header="Home">
                <RibbonGroup>
                    <RibbonButton Label="Load Folder" Command="{Binding OpenDirectoryCommand}" SmallImageSource="/Images/OpenFolder_16x.png" />
                    <RibbonButton Label="Save All"  Command="{Binding SaveAllCommand}" SmallImageSource="/Images/SaveAll_16x.png" />
                    <RibbonButton Label="Scan" Command="{Binding ScanAllFiles}"></RibbonButton>
                </RibbonGroup>
                <RibbonGroup>
                    <RibbonButton Label="New Class Diagram" Command="{Binding CreateNewClassDiagram}" />
                    <RibbonButton Label="New Sequence Diagram" Command="{Binding CreateNewSequenceDiagram}" />
                </RibbonGroup>
                <RibbonGroup>
                    <RibbonTextBox Text="{Binding JarLocation, FallbackValue='d:\downloads\plantuml.jar', Mode=TwoWay}"></RibbonTextBox>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <TreeView Grid.Row="1" Grid.RowSpan="3" ItemsSource="{Binding Folder.Children}">

            <TreeView.ItemTemplate>
                <StaticResource ResourceKey="NameTemplate" />
            </TreeView.ItemTemplate>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True"></Setter>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsFile}" Value="false">
                            <Setter Property="ContextMenu" Value="{StaticResource FolderMenu}">
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsFile}" Value="true">
                            <Setter Property="ContextMenu" Value="{StaticResource FileMenu}">
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <GridSplitter   Grid.RowSpan="3"  HorizontalAlignment="Center"
              VerticalAlignment="Stretch" Grid.Row="1" Grid.Column="1" ShowsPreview="True" Width="5" />
        <Grid Grid.Row="1" Grid.Column="2">
            <TabControl ContentTemplate="{DynamicResource TabControlItemTemplate2}"
SelectedItem="{Binding CurrentDocument, Mode=TwoWay}" x:Name="Tabs"
                        ItemsSource="{Binding OpenDocuments}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto" ></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock   Text="{Binding Name}" Margin="{DynamicResource TabHeaderMargin}"></TextBlock>

                            <Button ToolTip="Save and Close"  Margin="{DynamicResource TabHeaderMargin}" Grid.Column="1" CommandParameter="{Binding}" Command="{Binding Path=DataContext.CloseDocumentAndSave, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}">
                                <Button.Content>
                                    <Grid>
                                        <Image Source="/Images/SaveClose_16x.png"></Image>
                                    </Grid>
                                </Button.Content>
                            </Button>

                            <Button ToolTip="Close without saving"  Margin="{DynamicResource TabHeaderMargin}" Grid.Column="2" CommandParameter="{Binding}" Command="{Binding Path=DataContext.CloseDocument, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}">
                                <Button.Content>
                                    <Grid>
                                        <Image Source="/Images/Close_8x_16x.png" ></Image>
                                    </Grid>
                                </Button.Content>
                            </Button>
                            <Button  ToolTip="Preview" Margin="{DynamicResource TabHeaderMargin}" Grid.Column="3"  Command="{Binding  ShowPreviewCommand}">
                                <Button.Content>
                                    <Grid>
                                        <Image Source="/Images/PreviewTransition_16x.png" ></Image>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>
        </Grid>
        <GridSplitter Grid.Row="2" ShowsPreview="True" Grid.Column="2" Height="5" ResizeDirection="Rows" HorizontalAlignment="Stretch"></GridSplitter>
        <ListBox Grid.Row="3" Grid.Column="2"  ItemsSource="{Binding Messages}" HorizontalContentAlignment="Stretch" SelectedItem="{Binding SelectedMessage}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition Width="200"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Text}" Grid.Column="0" Margin="10,5,10,5" ></TextBlock>
                        <TextBlock Text="{Binding LineNumber}" Grid.Column="1" Margin="10,5,10,5"></TextBlock>
                        <Button Command="{Binding CreateMissingMethodCommand}" Margin="10,5,10,5" CommandParameter="{Binding}" Content="Add Method To Class" Grid.Column="2"></Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>